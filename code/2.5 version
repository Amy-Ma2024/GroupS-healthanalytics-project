library(dplyr)
library(readr)
setwd("~/Desktop")  
nhis_00014 <- read_csv("nhis_00014.csv")  

## Smoking Duration data processing
```{r}
# Ensure SMOKESTATUS2 is numeric
df <- nhis_00014 %>%
  mutate(SMOKESTATUS2 = as.numeric(SMOKESTATUS2))

# Filter data: Keep only current smokers (SMOKESTATUS2 values 10, 11, 12, 13)
data_smokers <- df %>%
  filter(SMOKESTATUS2 %in% c(10, 11, 12, 13)) %>%  
  mutate(
    # Calculate Smoking Duration
    smoking_duration = AGE - SMOKAGEREG
  ) %>%
  # Ensure smoking duration is non-negative (exclude invalid values)
  filter(smoking_duration >= 0)

# Ensure only SMOKESTATUS2 values 10, 11, 12, 13 are included
data_smokers <- data_smokers %>%
  filter(SMOKESTATUS2 %in% c(10, 11, 12, 13))

# Check the calculated results (mean/median)
summary(df_filtered$smoking_duration)

# Verify that the filtered SMOKESTATUS2 values are correct
table(data_smokers$SMOKESTATUS2)

# Visualize the distribution of Smoking Duration
library(ggplot2)
ggplot(df_filtered, aes(x = smoking_duration)) + 
  geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Smoking Duration (Only Current Smokers)", 
       x = "Smoking Duration (Years)", y = "Count")
```

##Packyear
```{r cars}
data_smokers <- df%>%
  mutate(CIGSDAY=as.numeric(CIGSDAY))%>%
  mutate(CIGSDAY1=as.numeric(CIGSDAY1))%>%
  mutate(CIGSDAY2=as.numeric(CIGSDAY2))

#Create a new variable daily_smoke
data_smokers$daily_smoke <- apply(data[, c("CIGSDAY", "CIGSDAY1", "CIGSDAY2")], 1, max, na.rm = TRUE)


# Remove rows where daily_smoke is 0
data_smokers <- data_smokers[data_smokers$daily_smoke > 0, ]

# Check the new variable
summary(data_smokers$daily_smoke)
table(data_smokers$daily_smoke)


#Calculate packyear
data_packyear <- df%>%
  mutate(packyear=df$smoking_duration*df$daily_smoke/20)%>%
  filter(packyear >= 0)  
```


##family_lung_cancer
```{r cars}
# Filter data for the corresponding years (2010 and 2015)
data_family <- data_smokers %>%
  filter(YEAR %in% c(2000, 2005, 2010, 2015)) %>%  # Only keep data from 2000, 2005, 2010 and 2015
  mutate(
    # Generate a family lung cancer history variable: if any family member has lung cancer, set it to 1, otherwise set it to 0
    family_lung_cancer = ifelse(
      BMLGCAN == 1 | BFLGCAN == 1 | FBLGCAN == 1 | FSLGCAN == 1 | BDLGCAN == 1 | BSLGCAN == 1, 1, 0
    )
  )

```


## Compute Descriptive Statistics for Sex
```{r}
# Calculate the proportion of males and females
df_filtered %>%
  count(SEX) %>%
  mutate(proportion = n / sum(n))  # Ensure this line is complete
```
### Compute Income Proportion
```{r}
install.packages("scales") 
library(scales)

df_filtered %>%
  count(EARNIMP1) %>%
  mutate(proportion = scales::percent(n / sum(n)))

library(ggplot2)
library(dplyr)

# Calculate the proportion of each income category
income_data <- df_filtered %>%
  count(EARNIMP1) %>%
  mutate(proportion = n / sum(n),
         label = paste0(round(proportion * 100, 1), "%"))  # Generate percentage labels

# Plot the pie chart
ggplot(income_data, aes(x = "", y = proportion, fill = factor(EARNIMP1))) +
  geom_bar(stat = "identity", width = 1) +  # Create bars
  coord_polar(theta = "y") +  # Convert to polar coordinates (pie chart)
  labs(title = "Income Category Proportion",
       fill = "Income Category") +
  theme_void() +  # Remove grid and axis for a cleaner pie chart look
  geom_text(aes(label = label), position = position_stack(vjust = 0.5)) 
```
##CNLUNG data processing
```{r}
# Filter out rows where CNLUNG is NA
df_filtered <- data_family %>% 
  filter(!is.na(data_family$CNLUNG) & !is.na(data_family$SMOKAGEREG) & data_family$CNLUNG %in% c(0, 1))
```

##Descriptive statistics of variables
```{r}
table(df_filtered$CNLUNG)
prop.table(table(df_filtered$CNLUNG))

df_filtered %>%
  summarise(
    Mean_smoking_duration = mean(smoking_duration, na.rm = TRUE),
    SD_smoking_duration = sd(smoking_duration, na.rm = TRUE),
    Min_smoking_duration = min(smoking_duration, na.rm = TRUE),
    Max_smoking_duration = max(smoking_duration, na.rm = TRUE)
  )

table(df_filtered$SEX)
prop.table(table(df_filtered$SEX))

table(df_filtered$family_lung_cancer)
prop.table(table(df_filtered$family_lung_cancer))

table(df_filtered$EARNIMP1)
prop.table(table(df_filtered$EARNIMP1))

```
## MODEL
```{r}
# Model with smoking_duration
logit_model_sd <- glm(CNLUNG ~ smoking_duration + sex + income + family_lung_cancer, 
                   data = df_filtered, family = binomial)

#results
summary(logit_model_sd)

# Calculate the mean of the dependent variable (CNLUNG)
mean_CNLUNG <- mean(df_filtered$CNLUNG)
mean_CNLUNG

# null model
logit_sd_null <- glm(CNLUNG ~ 1, 
                   data = df_filtered, family = binomial)

# Ffull model
logit_model_sd <- glm(CNLUNG ~ smoking_duration + sex + income + family_lung_cancer, 
                   data = df_filtered, family = binomial)

# Likelihood ratio test
log_likelihood_null <- logLik(logit_sd_null)
log_likelihood_full <- logLik(logit_model_sd)
LR_statistic <- 2 * (log_likelihood_full - log_likelihood_null)
LR_statistic
# Calculate degrees of freedom
df_diff <- length(coef(logit_model_sd)) - length(coef(logit_sd_null))
# Calculate the p-value
p_value <- pchisq(LR_statistic, df = df_diff, lower.tail = FALSE)
p_value

plot(logit_model_sd, 1)
plot(logit_model_sd, 2)

# Model with packyear
logit_model_py <- glm(CNLUNG ~ smoking_duration + packyear + sex + income + family_lung_cancer, 
                   data = df_filtered, family = binomial)
summary(logit_model_py)
plot(logit_model_py, 1)
plot(logit_model_py, 2)

# Model with both 
logit_model <- glm(CNLUNG ~ smoking_duration + packyear + sex + income + family_lung_cancer, 
                   data = df_filtered, family = binomial)

summary(logit_model)
plot(logit_model, 1)
plot(logit_model, 2)

# Test collinearity
vif(logit_model)
```

## TABLE







